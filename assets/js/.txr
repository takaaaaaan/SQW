
function fetchAllCoordinates(callback) {
    const coordinates = [];

    const dbRef = firebase.database().ref();
    dbRef.on("value", (snapshot) => {
        snapshot.forEach((childSnapshot) => {
            const id = childSnapshot.key; // ユニークID（"574001590"など）
            let maxTimestamp = null;
            let maxTimestampData = null;

            childSnapshot.forEach((timestampSnapshot) => {
                const timestamp = timestampSnapshot.key; // タイムスタンプ（"2023-12-23 07:11:47"など）
                const data = timestampSnapshot.val();

                // 最も新しいタイムスタンプのデータを更新
                if (!maxTimestamp || new Date(timestamp) > new Date(maxTimestamp)) {
                    maxTimestamp = timestamp;
                    maxTimestampData = {
                        tableId: id,
                        moveKey: timestamp, // タイムスタンプをmoveKeyとして使用
                        lat: parseFloat(data.latitude),
                        lng: parseFloat(data.longitude),
                        oxg: data.dissolved_oxygen,
                        ch: data.chlorophyll,
                        tn: data.TN,
                        tp: data.TP,
                        din: data.DIN,
                        dip: data.DIP,
                        sd: data.SD,
                        value: data.Grade,
                    };
                }
            });

            if (maxTimestampData) {
                coordinates.push(maxTimestampData);
            }
        });

        if (coordinates.length > 0) {
            callback(coordinates);
        }
    });
}
// MEGA_BULE

const firebaseConfig = {
    apiKey: "AIzaSyAx1xUEgJ3-t-NUb5kiXgFTysReX_BVf4c",
    authDomain: "mega-blue.firebaseapp.com",
    databaseURL: "https://mega-blue-default-rtdb.asia-southeast1.firebasedatabase.app",
    projectId: "mega-blue",
    storageBucket: "mega-blue.appspot.com",
    messagingSenderId: "878936419008",
    appId: "1:878936419008:web:c8051dd8868ff9c17cdb25",
    measurementId: "G-YKWS3HBW98"
};
// Firebaseを初期化します
firebase.initializeApp(firebaseConfig);
function fetchAllCoordinates(callback) {
    const coordinates = [];

    for (let i = 1; i <= 50; i++) {
        const id = "A-" + String(i).padStart(2, "0");
        const dbRef = firebase.database().ref(id);
        const tableId = id;
        let maxMoveKeyCoordinate = null; // 가장 큰 moveKey 좌표를 저장하기 위한 변수
        dbRef.on("value", (snapshot) => {
            snapshot.forEach((childSnapshot) => {
                const moveKey = childSnapshot.key; // move01, move02, ...
                const data = childSnapshot.val();
                const coordinate = {
                    tableId,
                    moveKey,
                    lat: parseFloat(data.latitude),
                    lng: parseFloat(data.longitude),
                    value: data.Grade,
                    cod: data.COD,
                    dip: data.DIP,
                    sd: data.SD,
                    spm: data.SPM,
                    si: data.Si_OH4,
                    tn: data.TN,
                    tp: data.TP,
                    ch: data.chlorophyll,
                    oxg: data.dissolved_oxygen,
                    ph: data.pH,
                    sal: data.salinity,
                    temp: data.temperature,
                };

                if (!isNaN(coordinate.lat) && !isNaN(coordinate.lng)) {
                    // 가장 큰 moveKey값을 가진 좌표만 저장
                    if (!maxMoveKeyCoordinate || parseInt(coordinate.moveKey.slice(4)) > parseInt(maxMoveKeyCoordinate.moveKey.slice(4))) {
                        maxMoveKeyCoordinate = coordinate;
                    }
                }
            });
            coordinates[i - 1] = maxMoveKeyCoordinate; // 최대 moveKey 좌표만 저장
            if (i === 50) {
                callback(coordinates);
            }
        });
    }
}

